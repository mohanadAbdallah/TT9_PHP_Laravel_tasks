Index: phpBasicsTask.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php \r\n//php basics exercise ..\r\n\r\n// 1- Write a PHP program to check whether the first two characters and last two characters of a give string are same.\r\n\r\n$string = \"My name is Mohanad Abdullah Abu El-Atta My\";\r\n\r\nif(substr($string, 0, 2) === substr($string, -2, 2)){\r\n    echo \"The first and the last character are the same<br/><br/>\";\r\n} else{\r\n    echo \"The first and the last character are not the same<br/><br/>\";\r\n}\r\n// 2- Write a PHP program to check if a given string starts with 'Go' or not. (Don't use \"str_starts_with\" function)\r\n\r\n$string = \"Go To school !!\";\r\n\r\nif (substr($string, 0, 2) === 'Go'){\r\n  echo \"$string starts with 'Go'. <br/><br/>\";\r\n} else{\r\n    echo \"$string does not start with 'Go'.<br/><br/>\";\r\n}\r\n\r\n// 3- Write a PHP program to check if a given positive number is a multiple of 3 or a multiple of 7.\r\n$number = 21;\r\n\r\nif ($number % 3 === 0 || $number % 7 === 0) {\r\n    echo \"$number multiple of 3 or a multiple of 7<br/><br/>\";\r\n} else {\r\n    echo \"$number not multiple of 3 or a multiple of 7<br/><br/>\";\r\n}\r\n\r\n// 4- Write a PHP program to check the largest number among three given numbers.\r\n$num1 = 15;\r\n$num2 = 27;\r\n$num3 = 32;\r\n\r\n$largest = $num1;\r\n\r\n    if ($num2 > $largest) {\r\n        $largest = $num2;\r\n    }\r\n\r\n    if ($num3 > $largest) {\r\n        $largest = $num3;\r\n    }\r\n\r\n    echo \"The largest number among $num1, $num2, and $num3 is: $largest <br/><br/>\";\r\n\r\n// 5- Write a PHP program to check which number nearest to the value 100 among two given integers. Return 0 if the two numbers are equal.\r\nfunction findNearestTo100($num1, $num2) {\r\n    if ($num1 === $num2) {\r\n        return 0;\r\n    }\r\n\r\n    $dist1 = abs(100 - $num1);\r\n    $dist2 = abs(100 - $num2);\r\n\r\n    if ($dist1 < $dist2) {\r\n        return $num1;\r\n    } else {\r\n        return $num2;\r\n    }\r\n}\r\n\r\n// Usage example:\r\n$num1 = 95;\r\n$num2 = 110;\r\n$nearestTo100 = findNearestTo100($num1, $num2);\r\necho \"The number nearest to 100 among $num1 and $num2 is: $nearestTo100 <br/><br/>\";\r\n\r\n// 6- Write a PHP program to find the larger value from two positive integer values that is in the range 20-30 inclusive or return 0 if neither is in that range.\r\n\r\nfunction findLargerInRange($num1, $num2) {\r\n    if ($num1 >= 20 && $num1 <= 30 && $num2 >= 20 && $num2 <= 30) {\r\n        return max($num1, $num2);\r\n    } elseif ($num1 >= 20 && $num1 <= 30) {\r\n        return $num1;\r\n    } elseif ($num2 >= 20 && $num2 <= 30) {\r\n        return $num2;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Example usage:\r\n$num1 = 27;\r\n$num2 = 20;\r\n$largerInRange = findLargerInRange($num1, $num2);\r\necho \"The larger value within the range 20-30 is: \" . $largerInRange . \"<br/><br/>\" ;\r\n\r\n// 7- Write a PHP program to count the number of occurrences of any digit in a string.\r\n\r\nfunction countDigitOccurrences($string) {\r\n    $count = 0;\r\n\r\n    for ($i = 0; $i < strlen($string); $i++) {\r\n        $char = $string[$i];\r\n\r\n        if ($char >= '0' && $char <= '9') {\r\n            $count++;\r\n        }\r\n    }\r\n\r\n    return $count;\r\n}\r\n\r\n$string = \"Hello12345\";\r\n$occurrences = countDigitOccurrences($string);\r\necho \"Number of digit occurrences in ' \" . $string . \" ' is : \" . $occurrences .\"<br/><br/>\";\r\n\r\n\r\n// 8- Write a PHP program to return the sum of digits of an integer number.\r\n\r\nfunction sumOfDigits($number) {\r\n    $sum = 0;\r\n\r\n    while ($number > 0) {\r\n        $digit = $number % 10;\r\n        $sum += $digit;\r\n        $number = (int) ($number / 10);\r\n    }\r\n\r\n    return $sum;\r\n}\r\n\r\n$number = 12345;\r\n$sum = sumOfDigits($number);\r\necho \"Sum of digits of $number is: $sum <br/><br/>\";\r\n\r\n// 9- Write a PHP program to reverse any string. (Don't use \"strrev\" function.)\r\n\r\n$string = \"Hello, World!\";\r\n\r\n    $reversed = '';\r\n  \r\n    for ($i = strlen($string) - 1; $i >= 0; $i--) {\r\n        $reversed .= substr($string, $i, 1);\r\n    }\r\n  \r\n    echo \"The reverse of ' \" . $string . \" ' is : \". $reversed;
===================================================================
diff --git a/phpBasicsTask.php b/phpBasicsTask.php
--- a/phpBasicsTask.php	
+++ b/phpBasicsTask.php	
@@ -1,22 +1,34 @@
-<?php 
-//php basics exercise ..
+<!DOCTYPE html>
+<html>
+<head>
+    <title>HomeWork 1 </title>
+</head>
+<body>
+<header style="background-color: aqua;padding: 20px;">
+    <h1>HomeWork 1 </h1>
+</header>
 
-// 1- Write a PHP program to check whether the first two characters and last two characters of a give string are same.
-
-$string = "My name is Mohanad Abdullah Abu El-Atta My";
+<!--php basics exercise ..-->
+<h3>#1</h3>
+<?=
+$string = "My name is Mohanned Abdullah Abu El-Atta My";
 
-if(substr($string, 0, 2) === substr($string, -2, 2)){
+if (substr($string, 0, 2) === substr($string, -2, 2)) {
     echo "The first and the last character are the same<br/><br/>";
-} else{
+} else {
     echo "The first and the last character are not the same<br/><br/>";
 }
+?>
+<!--1- Write a PHP program to check whether the first two characters and last two characters of a give string are same.-->
+
+<?php
 // 2- Write a PHP program to check if a given string starts with 'Go' or not. (Don't use "str_starts_with" function)
 
 $string = "Go To school !!";
 
-if (substr($string, 0, 2) === 'Go'){
-  echo "$string starts with 'Go'. <br/><br/>";
-} else{
+if (str_starts_with($string, 'Go')) {
+    echo "$string starts with 'Go'. <br/><br/>";
+} else {
     echo "$string does not start with 'Go'.<br/><br/>";
 }
 
@@ -36,20 +48,22 @@
 
 $largest = $num1;
 
-    if ($num2 > $largest) {
-        $largest = $num2;
-    }
+if ($num2 > $largest) {
+    $largest = $num2;
+}
 
-    if ($num3 > $largest) {
-        $largest = $num3;
-    }
+if ($num3 > $largest) {
+    $largest = $num3;
+}
 
-    echo "The largest number among $num1, $num2, and $num3 is: $largest <br/><br/>";
+echo "The largest number among $num1, $num2, and $num3 is: $largest <br/><br/>";
 
 // 5- Write a PHP program to check which number nearest to the value 100 among two given integers. Return 0 if the two numbers are equal.
-function findNearestTo100($num1, $num2) {
+function findNearestTo100($num1, $num2)
+{
     if ($num1 === $num2) {
         return 0;
+
     }
 
     $dist1 = abs(100 - $num1);
@@ -70,7 +84,8 @@
 
 // 6- Write a PHP program to find the larger value from two positive integer values that is in the range 20-30 inclusive or return 0 if neither is in that range.
 
-function findLargerInRange($num1, $num2) {
+function findLargerInRange($num1, $num2)
+{
     if ($num1 >= 20 && $num1 <= 30 && $num2 >= 20 && $num2 <= 30) {
         return max($num1, $num2);
     } elseif ($num1 >= 20 && $num1 <= 30) {
@@ -86,11 +101,12 @@
 $num1 = 27;
 $num2 = 20;
 $largerInRange = findLargerInRange($num1, $num2);
-echo "The larger value within the range 20-30 is: " . $largerInRange . "<br/><br/>" ;
+echo "The larger value within the range 20-30 is: " . $largerInRange . "<br/><br/>";
 
 // 7- Write a PHP program to count the number of occurrences of any digit in a string.
 
-function countDigitOccurrences($string) {
+function countDigitOccurrences($string)
+{
     $count = 0;
 
     for ($i = 0; $i < strlen($string); $i++) {
@@ -106,21 +122,23 @@
 
 $string = "Hello12345";
 $occurrences = countDigitOccurrences($string);
-echo "Number of digit occurrences in ' " . $string . " ' is : " . $occurrences ."<br/><br/>";
+echo "Number of digit occurrences in ' " . $string . " ' is : " . $occurrences . "<br/><br/>";
 
 
 // 8- Write a PHP program to return the sum of digits of an integer number.
 
-function sumOfDigits($number) {
+function sumOfDigits($number)
+{
     $sum = 0;
 
     while ($number > 0) {
         $digit = $number % 10;
         $sum += $digit;
-        $number = (int) ($number / 10);
+        $number = (int)($number / 10);
     }
 
     return $sum;
+
 }
 
 $number = 12345;
@@ -131,10 +149,14 @@
 
 $string = "Hello, World!";
 
-    $reversed = '';
-  
-    for ($i = strlen($string) - 1; $i >= 0; $i--) {
-        $reversed .= substr($string, $i, 1);
-    }
-  
-    echo "The reverse of ' " . $string . " ' is : ". $reversed;
\ No newline at end of file
+$reversed = '';
+
+for ($i = strlen($string) - 1; $i >= 0; $i--) {
+    $reversed .= substr($string, $i, 1);
+}
+
+echo "The reverse of ' " . $string . " ' is : " . $reversed;
+?>
+
+</body>
+</html>
